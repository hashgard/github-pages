(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{193:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("本教程可帮助你创建一个在本地运行网络的验证人节点，以进行测试和其他相关的用途。")]),t._v(" "),t._m(2),t._v(" "),e("ul",[e("li",[e("router-link",{attrs:{to:"./installation.html"}},[t._v("安装 Hashgard")])],1)]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),e("p",[t._v("现在账户已经存在了，你可以创建新的账户并向其发送资金！")]),t._v(" "),t._m(9)])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"部署你自己的测试网"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署你自己的测试网","aria-hidden":"true"}},[this._v("#")]),this._v(" 部署你自己的测试网")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"单节点，本地的，手动的测试网"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单节点，本地的，手动的测试网","aria-hidden":"true"}},[this._v("#")]),this._v(" 单节点，本地的，手动的测试网")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"需要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需要","aria-hidden":"true"}},[this._v("#")]),this._v(" 需要")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"创建genesis文件并启动网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建genesis文件并启动网络","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建genesis文件并启动网络")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can run all of these commands from your home directory")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initialize the genesis.json file that will help you to bootstrap the network")]),t._v("\nhashgard init --chain-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("testing testing\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a key to hold your validator account")]),t._v("\nhashgardcli keys "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" validator\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add that key into the genesis.app_state.accounts array in the genesis file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NOTE: this command lets you set the number of coins. Make sure this account has some coins")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# with the genesis.app_state.staking.params.bond_denom denom, the default is staking")]),t._v("\nhashgard add-genesis-account "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("hashgardcli keys show validator -a"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" 1000000000stake,1000000000validatortoken\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Generate the transaction that creates your validator")]),t._v("\nhashgard gentx --name validator\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add the generated bonding transaction to the genesis file")]),t._v("\nhashgard collect-gentxs\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now its safe to start `hashgard`")]),t._v("\nhashgard start\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("启动将会把"),e("code",[t._v("hashgard")]),t._v("相关的所有数据放在"),e("code",[t._v("~/.hashgard")]),t._v("目录。\n你可以检查所创建的genesis文件——"),e("code",[t._v("~/.hashgard/config/genesis.json")]),t._v("。\n同时"),e("code",[t._v("hashgardcli")]),t._v("也已经配置完成并且有了一个拥有token的账户(stake和自定义的代币)。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"密钥-账户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#密钥-账户","aria-hidden":"true"}},[this._v("#")]),this._v(" 密钥&账户")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("你需要使用指定节点的"),s("code",[this._v("hashgardcli")]),this._v("目录作为你的"),s("code",[this._v("home")]),this._v("来同"),s("code",[this._v("hashgardcli")]),this._v("交互，并执行查询或者创建交易:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("hashgardcli keys list --home ./build/node0/hashgardcli\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("::: 提示\n注意：每个节点的密钥种子放在"),s("code",[this._v("./build/nodeN/hashgardcli/key_seed.json")]),this._v("中，\n可以通过"),s("code",[this._v("hashgardcli keys add --recover")]),this._v("命令来回复。\n:::")])}],!1,null,null,null);s.default=n.exports}}]);