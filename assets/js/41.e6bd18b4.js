(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{177:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"hashgard-제네시스-스테이트"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hashgard-제네시스-스테이트","aria-hidden":"true"}},[t._v("#")]),t._v(" Hashgard 제네시스 스테이트")]),t._v(" "),n("p",[t._v("Hashgard의 제네시스 스테이트인 "),n("code",[t._v("GenesisState")]),t._v("는 계정 정보, 모듈 스테이트 그리고 제네시스 트랜잭션 같은 메타데이터 등으로 구성됩니다. 각 모듈은 각자의 "),n("code",[t._v("GenesisState")]),t._v("를 지정할 수 있습니다. 또한, 각 모듈은 각자의 제네시스 스테이트 검증, 임포트, 엑스포트 기능 등을 지정할 수 있습니다.")]),t._v(" "),n("p",[t._v("Hashgard 제네시스 스테이트는 다음과 같이 정의됩니다:")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" GenesisState "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Accounts     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("GenesisAccount      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"accounts"`')]),t._v("\n  AuthData     auth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GenesisState     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"auth"`')]),t._v("\n  BankData     bank"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GenesisState     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"bank"`')]),t._v("\n  StakingData  staking"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GenesisState  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"staking"`')]),t._v("\n  MintData     mint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GenesisState     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"mint"`')]),t._v("\n  DistrData    distr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GenesisState    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"distr"`')]),t._v("\n  GovData      gov"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GenesisState      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"gov"`')]),t._v("\n  SlashingData slashing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GenesisState "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"slashing"`')]),t._v("\n  GenTxs       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RawMessage     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"gentxs"`')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("ABCI "),n("code",[t._v("initChainer")]),t._v("에서는 Hashgard의 "),n("code",[t._v("initFromGenesisState")]),t._v("를 기반으로 각 모듈의 "),n("code",[t._v("InitGenesis")]),t._v("를 호출해 각 모듈들의 "),n("code",[t._v("GenesisState")]),t._v("를 파라미터 값으로 불러옵니다.")]),t._v(" "),n("h2",{attrs:{id:"계정"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#계정","aria-hidden":"true"}},[t._v("#")]),t._v(" 계정")]),t._v(" "),n("p",[n("code",[t._v("GenesisState")]),t._v("에서 제네시스 계정은 다음과 같이 정의됩니다:")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" GenesisAccount "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Address       sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AccAddress "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"address"`')]),t._v("\n  Coins         sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Coins      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"coins"`')]),t._v("\n  Sequence      "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"sequence_number"`')]),t._v("\n  AccountNumber "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"account_number"`')]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vesting account fields")]),t._v("\n  OriginalVesting  sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Coins "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"original_vesting"`')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total vesting coins upon initialization")]),t._v("\n  DelegatedFree    sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Coins "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"delegated_free"`')]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delegated vested coins at time of delegation")]),t._v("\n  DelegatedVesting sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Coins "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"delegated_vesting"`')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delegated vesting coins at time of delegation")]),t._v("\n  StartTime        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"start_time"`')]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vesting start time (UNIX Epoch time)")]),t._v("\n  EndTime          "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"end_time"`')]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vesting end time (UNIX Epoch time)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("각 계정은 시퀀스 수(sequence number (nonce))와 주소 외에도 유효한 고유 계정 번호를 보유해야 합니다.")]),t._v(" "),n("p",[t._v("만약 계정이 베스팅 계정인 경우, 필수 베스팅 정보가 제공되어야 합니다. 베스팅 계정은 최소 "),n("code",[t._v("OriginalVestin")]),t._v(" 값과 "),n("code",[t._v("EndTime")]),t._v(" 값이 정의되어야 합니다. 먄약 "),n("code",[t._v("StartTime")]),t._v('이 함께 정의된 경우, 계정은 "연속되는(continuous)" 베스팅 계정으로 처리되며, 지정된 스케줄 안에서 꾸준히 토큰을 언락합니다. 여기에서 '),n("code",[t._v("StartTime")]),t._v("의 값은 "),n("code",[t._v("EndTime")]),t._v("의 값 보다 작아야 하지만, "),n("code",[t._v("StartTime")]),t._v("의 값은 미래 값으로 지정할 수는 있습니다 (제네시스 시간과 동일하지 않아도 괜찮습니다). 새로운 스테이트(엑스포트 되지 않은 스테이트)에서 시작하는 체인의 경우, "),n("code",[t._v("OriginalVestin")]),t._v("의 값은 "),n("code",[t._v("Coins")]),t._v("의 값과 동일하거나 적어야 합니다.")])])}],!1,null,null,null);s.default=e.exports}}]);