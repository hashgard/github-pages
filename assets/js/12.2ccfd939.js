(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{217:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("See the "),s("a",{attrs:{href:"https://github.com/cosmos/launch",target:"_blank",rel:"noopener noreferrer"}},[t._v("launch repo"),s("OutboundLink")],1),t._v(" for\ninformation on the mainnet, including the correct version\nof the Cosmos-SDK to use and details about the genesis file.")])]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[s("strong",[t._v("You need to "),s("router-link",{attrs:{to:"./installation.html"}},[t._v("install gaia")]),t._v(" before you go further")],1)])]),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("These instructions are for setting up a brand new full node from scratch.")]),t._v(" "),s("p",[t._v("First, initialize the node and create the necessary config files:")]),t._v(" "),t._m(2),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),s("p",[t._v("Your full node has been initialized!")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),s("p",[t._v("Note we use the "),s("code",[t._v("latest")]),t._v(" directory in the "),s("a",{attrs:{href:"https://github.com/cosmos/launch",target:"_blank",rel:"noopener noreferrer"}},[t._v("launch repo"),s("OutboundLink")],1),t._v(" which contains details for the mainnet like the latest version and the genesis file.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("If you want to connect to the public testnet instead, click "),s("router-link",{attrs:{to:"./join-testnet.html"}},[t._v("here")])],1)]),t._v(" "),s("p",[t._v("To verify the correctness of the configuration run:")]),t._v(" "),t._m(12),t._m(13),t._v(" "),s("p",[t._v("Your node needs to know how to find peers. You'll need to add healthy seed nodes to "),s("code",[t._v("$HOME/.hashgard/config/config.toml")]),t._v(". The "),s("a",{attrs:{href:"https://github.com/cosmos/launch",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("launch")]),s("OutboundLink")],1),t._v(" repo contains links to some seed nodes.")]),t._v(" "),s("p",[t._v("If those seeds aren't working, you can find more seeds and persistent peers on a Cosmos Hub explorer (a list can be found on the "),s("a",{attrs:{href:"https://cosmos.network/launch",target:"_blank",rel:"noopener noreferrer"}},[t._v("launch page"),s("OutboundLink")],1),t._v(").")]),t._v(" "),s("p",[t._v("You can also ask for peers on the "),s("a",{attrs:{href:"https://riot.im/app/#/room/#cosmos-validators:matrix.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Validators Riot Room"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("For more information on seeds and peers, you can "),s("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/develop/docs/tendermint-core/using-tendermint.md#peers",target:"_blank",rel:"noopener noreferrer"}},[t._v("read this"),s("OutboundLink")],1),t._v(".")]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),s("p",[t._v("Transactions on the Cosmos Hub network need to include a transaction fee in order to be processed. This fee pays for the gas required to run the transaction. The formula is the following:")]),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),s("p",[t._v("Start the full node with this command:")]),t._v(" "),t._m(25),s("p",[t._v("Check that everything is running smoothly:")]),t._v(" "),t._m(26),s("p",[t._v("View the status of the network with the "),s("a",{attrs:{href:"https://cosmos.network/launch",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cosmos Explorer"),s("OutboundLink")],1),t._v(".")]),t._v(" "),t._m(27),t._v(" "),s("p",[t._v("Hashgard can dump the entire application state to a JSON file, which could be useful for manual analysis and can also be used as the genesis file of a new network.")]),t._v(" "),s("p",[t._v("Export state with:")]),t._v(" "),t._m(28),s("p",[t._v("You can also export state from a particular height (at the end of processing the block of that height):")]),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),s("p",[t._v("Help to prevent a catastrophe by running invariants on each block on your full\nnode. In essence, by running invariants you ensure that the state of mainnet is\nthe correct expected state. One vital invariant check is that no atoms are\nbeing created or destroyed outside of expected protocol, however there are many\nother invariant checks each unique to their respective module. Because invariant checks\nare computationally expensive, they are not enabled by default. To run a node with\nthese checks start your node with the assert-invariants-blockly flag:")]),t._v(" "),t._m(33),s("p",[t._v("If an invariant is broken on your node, your node will panic and prompt you to send\na transaction which will halt mainnet. For example the provided message may look like:")]),t._v(" "),t._m(34),s("p",[t._v("When submitting a invariant-broken transaction, transaction fee tokens are not\ndeducted as the blockchain will halt (aka. this is a free transaction).")]),t._v(" "),t._m(35),t._v(" "),s("p",[t._v("You now have an active full node. What's the next step? You can upgrade your full node to become a Cosmos Validator. The top 100 validators have the ability to propose new blocks to the Cosmos Hub. Continue onto "),s("router-link",{attrs:{to:"./validators/validator-setup.html"}},[t._v("the Validator Setup")]),t._v(".")],1)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"join-the-mainnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#join-the-mainnet","aria-hidden":"true"}},[this._v("#")]),this._v(" Join the mainnet")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"setting-up-a-new-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-a-new-node","aria-hidden":"true"}},[this._v("#")]),this._v(" Setting Up a New Node")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("hashgard init "),e("span",{pre:!0,attrs:{class:"token operator"}},[this._v("<")]),this._v("your_custom_moniker"),e("span",{pre:!0,attrs:{class:"token operator"}},[this._v(">")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("Monikers can contain only ASCII characters. Using Unicode characters will render your node unreachable.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can edit this "),e("code",[this._v("moniker")]),this._v(" later, in the "),e("code",[this._v("~/.hashgard/config/config.toml")]),this._v(" file:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A custom human readable name for this node")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("moniker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<your_custom_moniker>"')]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can edit the "),e("code",[this._v("~/.hashgard/config/hashgard.toml")]),this._v(" file in order to enable the anti spam mechanism and reject incoming transactions with less than the minimum gas prices:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('# This is a TOML config file.\n# For more information, see https://github.com/toml-lang/toml\n\n##### main base config options #####\n\n# The minimum gas prices a validator is willing to accept for processing a\n# transaction. A transaction\'s fees must meet the minimum of any denomination\n# specified in this config (e.g. 10uatom).\n\nminimum-gas-prices = ""\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"genesis-seeds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#genesis-seeds","aria-hidden":"true"}},[this._v("#")]),this._v(" Genesis & Seeds")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"copy-the-genesis-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copy-the-genesis-file","aria-hidden":"true"}},[this._v("#")]),this._v(" Copy the Genesis File")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Fetch the testnet's "),e("code",[this._v("genesis.json")]),this._v(" file into "),e("code",[this._v("hashgard")]),this._v("'s config directory.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.hashgard/config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://raw.githubusercontent.com/cosmos/launch/master/genesis.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.hashgard/config/genesis.json\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("hashgard start\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"add-seed-nodes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-seed-nodes","aria-hidden":"true"}},[this._v("#")]),this._v(" Add Seed Nodes")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"a-note-on-gas-and-fees"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-note-on-gas-and-fees","aria-hidden":"true"}},[this._v("#")]),this._v(" A Note on Gas and Fees")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("On Cosmos Hub mainnet, the accepted denom is "),e("code",[this._v("uatom")]),this._v(", where "),e("code",[this._v("1atom = 1.000.000uatom")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("fees = ceil(gas * gasPrices)\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("The "),s("code",[t._v("gas")]),t._v(" is dependent on the transaction. Different transaction require different amount of "),s("code",[t._v("gas")]),t._v(". The "),s("code",[t._v("gas")]),t._v(" amount for a transaction is calculated as it is being processed, but there is a way to estimate it beforehand by using the "),s("code",[t._v("auto")]),t._v(" value for the "),s("code",[t._v("gas")]),t._v(" flag. Of course, this only gives an estimate. You can adjust this estimate with the flag "),s("code",[t._v("--gas-adjustment")]),t._v(" (default "),s("code",[t._v("1.0")]),t._v(") if you want to be sure you provide enough "),s("code",[t._v("gas")]),t._v(" for the transaction.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("The "),s("code",[t._v("gasPrice")]),t._v(" is the price of each unit of "),s("code",[t._v("gas")]),t._v(". Each validator sets a "),s("code",[t._v("min-gas-price")]),t._v(" value, and will only include transactions that have a "),s("code",[t._v("gasPrice")]),t._v(" greater than their "),s("code",[t._v("min-gas-price")]),t._v(".")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("The transaction "),s("code",[t._v("fees")]),t._v(" are the product of "),s("code",[t._v("gas")]),t._v(" and "),s("code",[t._v("gasPrice")]),t._v(". As a user, you have to input 2 out of 3. The higher the "),s("code",[t._v("gasPrice")]),t._v("/"),s("code",[t._v("fees")]),t._v(", the higher the chance that your transaction will get included in a block.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),e("p",[this._v("For mainnet, the recommended "),e("code",[this._v("gas-prices")]),this._v(" is "),e("code",[this._v("0.025uatom")]),this._v(".")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"set-minimum-gas-prices"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-minimum-gas-prices","aria-hidden":"true"}},[this._v("#")]),this._v(" Set "),e("code",[this._v("minimum-gas-prices")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Your full-node keeps unconfirmed transactions in its mempool. In order to protect it from spam, it is better to set a "),e("code",[this._v("minimum-gas-prices")]),this._v(" that the transaction must meet in order to be accepted in your node's mempool. This parameter can be set in the following file "),e("code",[this._v("~/.hashgard/config/hashgard.toml")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The initial recommended "),e("code",[this._v("min-gas-prices")]),this._v(" is "),e("code",[this._v("0.025uatom")]),this._v(", but you might want to change it later.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"run-a-full-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-a-full-node","aria-hidden":"true"}},[this._v("#")]),this._v(" Run a Full Node")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("hashgard start\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("hashgardcli status\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"export-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#export-state","aria-hidden":"true"}},[this._v("#")]),this._v(" Export State")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("hashgard "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".json\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("hashgard "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" --height "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".json\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If you plan to start a new network from the exported state, export with the "),e("code",[this._v("--for-zero-height")]),this._v(" flag:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("hashgard "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" --height "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --for-zero-height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".json\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"verify-mainnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#verify-mainnet","aria-hidden":"true"}},[this._v("#")]),this._v(" Verify Mainnet")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("hashgard start --assert-invariants-blockly\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("invariant broken:\n    loose token invariance:\n        pool.NotBondedTokens: "),e("span",{pre:!0,attrs:{class:"token number"}},[this._v("100")]),this._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("sum")]),this._v(" of account tokens: "),e("span",{pre:!0,attrs:{class:"token number"}},[this._v("101")]),this._v("\n    CRITICAL please submit the following transaction:\n        hashgardcli tx crisis invariant-broken staking supply\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"upgrade-to-validator-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#upgrade-to-validator-node","aria-hidden":"true"}},[this._v("#")]),this._v(" Upgrade to Validator Node")])}],!1,null,null,null);e.default=n.exports}}]);